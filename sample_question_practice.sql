SELECT DISTINCT
	REPLACEMENT_COST,
	(
		SELECT DISTINCT
			MIN(REPLACEMENT_COST)
		FROM
			FILM
	) AS LOWEST
FROM
	FILM;

SELECT
	CASE
		WHEN REPLACEMENT_COST BETWEEN 9.99 AND 19.99  THEN 'Low'
		WHEN REPLACEMENT_COST BETWEEN 20.00 AND 24.99  THEN 'Medium'
		WHEN REPLACEMENT_COST BETWEEN 25.00 AND 29.99  THEN 'High'
	END,
	COUNT(*)
FROM
	FILM
GROUP BY
	CASE
		WHEN REPLACEMENT_COST BETWEEN 9.99 AND 19.99  THEN 'Low'
		WHEN REPLACEMENT_COST BETWEEN 20.00 AND 24.99  THEN 'Medium'
		WHEN REPLACEMENT_COST BETWEEN 25.00 AND 29.99  THEN 'High'
	END;

SELECT
	TITLE,
	LENGTH,
	CATEGORY.NAME AS GENER
FROM
	FILM
	LEFT JOIN FILM_CATEGORY ON FILM.FILM_ID = FILM_CATEGORY.FILM_ID
	LEFT JOIN CATEGORY ON FILM_CATEGORY.CATEGORY_ID = CATEGORY.CATEGORY_ID
WHERE
	FILM.FILM_ID IN (
		SELECT
			FILM_ID
		FROM
			FILM
		GROUP BY
			FILM_ID
		HAVING
			LENGTH = MAX(LENGTH)
	)
	AND CATEGORY.NAME = 'Sports'
ORDER BY
	LENGTH DESC;

SELECT
	CATEGORY.NAME AS GENER,
	COUNT(*) AS TOTAL
FROM
	FILM
	LEFT JOIN FILM_CATEGORY ON FILM.FILM_ID = FILM_CATEGORY.FILM_ID
	LEFT JOIN CATEGORY ON FILM_CATEGORY.CATEGORY_ID = CATEGORY.CATEGORY_ID
GROUP BY
	CATEGORY.NAME
ORDER BY
	TOTAL DESC;

SELECT
	ACTOR.FIRST_NAME,
	ACTOR.LAST_NAME,
	COUNT(*) AS TOTAL
FROM
	ACTOR
	LEFT JOIN FILM_ACTOR ON ACTOR.ACTOR_ID = FILM_ACTOR.ACTOR_ID
	LEFT JOIN FILM ON FILM_ACTOR.FILM_ID = FILM.FILM_ID
GROUP BY
	ACTOR.FIRST_NAME,
	ACTOR.LAST_NAME
ORDER BY
	TOTAL DESC;

SELECT
	COUNT(*)
FROM
	ADDRESS
	LEFT JOIN CUSTOMER ON ADDRESS.ADDRESS_ID = CUSTOMER.ADDRESS_ID
WHERE
	CUSTOMER_ID IS NULL;

SELECT
	CITY.CITY,
	SUM(AMOUNT) AS SALES
FROM
	CITY
	LEFT JOIN ADDRESS ON CITY.CITY_ID = ADDRESS.CITY_ID
	LEFT JOIN CUSTOMER ON ADDRESS.ADDRESS_ID = CUSTOMER.ADDRESS_ID
	LEFT JOIN PAYMENT ON CUSTOMER.CUSTOMER_ID = PAYMENT.CUSTOMER_ID
GROUP BY
	CITY.CITY
HAVING
	SUM(AMOUNT) IS NOT NULL
ORDER BY
	SALES DESC;

SELECT
	CITY.CITY,
	SUM(AMOUNT) AS SALES,
	COUNTRY.COUNTRY
FROM
	CITY
	LEFT JOIN COUNTRY ON CITY.COUNTRY_ID = COUNTRY.COUNTRY_ID
	LEFT JOIN ADDRESS ON CITY.CITY_ID = ADDRESS.CITY_ID
	LEFT JOIN CUSTOMER ON ADDRESS.ADDRESS_ID = CUSTOMER.ADDRESS_ID
	LEFT JOIN PAYMENT ON CUSTOMER.CUSTOMER_ID = PAYMENT.CUSTOMER_ID
GROUP BY
	CITY.CITY,
	COUNTRY.COUNTRY
HAVING
	SUM(AMOUNT) IS NOT NULL
ORDER BY
	SALES ASC;

SELECT
	SUBQUERY.STAFF_ID,
	AVG(TOTAL)
FROM
	(
		SELECT
			STAFF_ID,
			CUSTOMER_ID,
			SUM(AMOUNT) AS TOTAL
		FROM
			PAYMENT
		GROUP BY
			STAFF_ID,
			CUSTOMER_ID
	) AS SUBQUERY
GROUP BY
	SUBQUERY.STAFF_ID;

SELECT
	AVG(DAILY.TOTAL)
FROM
	(
		SELECT
			SUM(AMOUNT) AS TOTAL,
			DATE (PAYMENT_DATE),
			EXTRACT(
				DOW
				FROM
					PAYMENT_DATE
			) AS WEEKDAY
		FROM
			PAYMENT
		WHERE
			EXTRACT(
				DOW
				FROM
					PAYMENT_DATE
			) = 0
		GROUP BY
			DATE (PAYMENT_DATE),
			WEEKDAY
	) AS DAILY;

SELECT
	F1.TITLE,
	F1.LENGTH,
	F1.REPLACEMENT_COST
FROM
	FILM AS F1
WHERE
	F1.LENGTH > (
		SELECT
			AVG(LENGTH)
		FROM
			FILM AS F2
		WHERE
			F1.REPLACEMENT_COST = F2.REPLACEMENT_COST
	)
ORDER BY
	F1.LENGTH ASC;

SELECT
	DISTRICT,
	ROUND(AVG(TOTAL), 2) as AVG_CUSTOMER_SPENT
FROM
	(
		SELECT
			C.CUSTOMER_ID,
			DISTRICT,
			SUM(AMOUNT) as TOTAL
		FROM
			PAYMENT as P
			INNER JOIN CUSTOMER C ON C.CUSTOMER_ID = P.CUSTOMER_ID
			INNER JOIN ADDRESS A ON C.ADDRESS_ID = A.ADDRESS_ID
		GROUP BY
			DISTRICT,
			C.CUSTOMER_ID
	) SUB
GROUP BY
	DISTRICT
ORDER BY
	2 DESC

